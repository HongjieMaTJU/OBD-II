/*
 * timer.cpp
 *
 *  Created on: 2016年12月22日
 *      Author: Topon-Edison
 *
 *
 *
 */

#include "chip.h"
#include "timer.h"



/* The instance function of  the Timer singleton */
Timer * Timer::Instance(Timer_T timer_t)
{
	static Timer timer0(Timer0); // the Timer use MRT timer channel 0
    static Timer timer1(Timer1); // the Timer use MRT timer channel 1
    static Timer timer2(Timer2); // the Timer use MRT timer channel 2
    switch (timer_t)
    {
    case Timer0:
    	return &timer0;
    case Timer1:
    	return &timer1;
    case Timer2:
    	return &timer2;
    default:
    	return 0;
    }

}

/*  Constructor, according to the timer_t to assign the member timer_
 *  's value, and set the timer to one shot mode
 */
Timer::Timer(Timer_T tiemr_t)
{
	/* Time tick for millisecond */
    const uint32_t timer_tick_ms_ = Chip_Clock_GetMainClockRate() / 1000;
    /* Time tick for microsecond */
	 const uint32_t timer_tick_us_ = timer_tick_ms / 1000;

	switch(tiemr_t)
	{
	case Timer0:
		/* Set the timer point to the mrt channel one */
		timer_ = LPC_MRT_CH0;
		break;
	case Timer1:
		timer_ = LPC_MRT_CH1;
		break;
	case Timer2:
		timer_ = LPC_MRT_CH2;
		break;
	default : // Don't exist the type of timer;
		timer_ = 0;
		break;
	}

	/* If the timer_ isn't null,  set the timer work in one shot mode */
	if(timer_)
	{
		Chip_MRT_SetMode(timer_,MRT_MODE_ONESHOT);
	}
}







