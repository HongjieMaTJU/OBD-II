/*
 * board.cpp
 *
 *  Created on: 2016年12月20日
 *      Author: cheri
 */



#include "board.h"


/**
 *
 * @brief frequency of the different clock sources of the board
 *
 */
const uint32_t OscRateIn = 12000000;      /*!< The frequency of the external crystal 12MHZ */
const uint32_t RTCOscRateIn = 32768;      /*!< The frequency of the RTC internal oscillator 32.76KHZ */




/*****************************************************************************
 * Private functions
 ****************************************************************************/
/* Set up the main clock */
void Board_Configure_Main_Clock()
{

	/* Set up system PLL output 72MHZ */
       Board_Setup_System_PLL();

    /* Set system clock divider to 1 */
       Chip_Clock_SetSysClockDiv(1);

    /* Setup FLASH access timing for 72MHz */
       Chip_FMC_SetFLASHAccess(SYSCTL_FLASHTIM_72MHZ_CPU);

    /* Set main clock source to the system PLL. This will drive 72MHz
       for the main clock */
       Chip_Clock_SetMainClockSource(SYSCTL_MAINCLKSRC_SYSPLLOUT);

}



/* Set up the system PLL */
void Board_SetUp_System_PLL()
{
	volatile int i;

	/* Set system PLL input to system oscillator */
		Chip_Clock_SetSystemPLLSource(SYSCTL_PLLCLKSRC_SYSOSC);

		/* Power down PLL to change the PLL divider ratio */
		Chip_SYSCTL_PowerDown(SYSCTL_POWERDOWN_SYSPLL_PD);

	/* Setup PLL for main oscillator rate (FCLKIN = 12MHz) * 6 = 72MHz
		   MSEL = 5 (this is pre-decremented), PSEL = 1 (for P = 2)
		   FCLKOUT = FCLKIN * (MSEL + 1) = 12MHz * 6 = 72MHz
		   FCCO = FCLKOUT * 2 * P = 72MHz * 2 * 2 = 288MHz (within FCCO range) */
		Chip_Clock_SetupSystemPLL(5, 2);

		/* Powerup system PLL */
		Chip_SYSCTL_PowerUp(SYSCTL_POWERDOWN_SYSPLL_PD);

		/* Wait for PLL to lock */
		while (!Chip_Clock_IsSystemPLLLocked()) {}

}


/* Setup the system oscillator */
void Board_Setup_System_Oscillator()
{
     volatile int i;
	/* Power down the system oscillator to configure it */
		Chip_SYSCTL_PowerDown(SYSCTL_POWERDOWN_SYSOSC_PD);

	/* Disable the system oscillator bypass bit and set
	 * the frequency range lower : 1MHZ - 20MHZ */
		Chip_Clock_Set_SYSOSCCTRL(false,false);

	/* Power up the system oscillator */
		Chip_SYSCTL_PowerUp(SYSCTL_POWERDOWN_SYSOSC_PD);

	/* Wait 200us for OSC to be stablized, no status
		   indication, dummy wait. */
		for(i = 0; i < 0x200; ++i){}
}

/*****************************************************************************
 * Public functions
 ****************************************************************************/

/* Initialize the board */
void Board_Init()
{
	Board_Setup_System_Oscillator();
	Board_Configure_Main_Clock();
	Board_Configure_IO_Clock();
	Board_Configure_USART_Clock();
	Board_Configure_CAN_Clock();
	Board_Configure_IO();
}



